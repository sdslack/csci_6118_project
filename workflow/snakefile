# TO NOTE: User define query(ies) between here and dashed line:
# Set up days from infection filter
num_list = "=0" + "".join(f",={i}" for i in range(1, 91))
# Define QUERIES dictionary
QUERIES = {
    'query_1': f"Days from Infection:{num_list}; Risk Factor:=IV Drug User",
    'query_2': f"Days from Infection:{num_list}; Risk Factor:=Male Sex with Male, =Sex worker, =Heterosexual"
}
# Extracting file names from QUERIES
# col_names = []
# for query in QUERIES:
#     col_name = query.split(':')[0]
#     col_names.append(col_name)
# -----------------------------------------------------------------------------------------
rule all:
    input:
        expand("../docs_snakemake/{query}_request_summary.csv", query=list(QUERIES.keys()))
        # "../docs_snakemake/query_1_request_summary.csv"
        # expand("docs_snakemake/{query}.csv", query = QUERIES)
rule run_query:
    output:
        filt_data = "../docs_snakemake/{query}_filtered_data.csv",
        all_data = "../docs_snakemake/{query}_all_data.csv",
        req_summ = "../docs_snakemake/{query}_request_summary.csv"
        # expand("../docs_snakemake/{query}_request_summary.csv", query=list(QUERIES.keys()))
    params:
        value = lambda wcs: QUERIES[wcs.query]
    shell:
        "python ../src/jb/get_queried_data.py " \
        + "--filters '{params.value}' " \
        + "--query_output_file {output.filt_data} " \
        + "--query_cols_all_data_file '{output.all_data}' " \
        + "--output_columns 'SE id(SA)' " \
        + "--query_request_file {output.req_summ} " \
        + "--global_logical_operator '&&'"